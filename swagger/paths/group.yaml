/group/{id}:
  get:
    tags:
      - Group
    summary: Endpoint to get user`s group
    security:
      - bearerAuth: []
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      401:
        $ref: "#/components/responses/UnauthorizedError"
      404:
        description: Group with this id was not found
/group:
  post:
    tags:
      - Group
    summary: Endpoint to create group
    security:
      - bearerAuth: []
    parameters:
      - in: body
        name: Group
        required: true
        description: The group`s title to create
        schema:
          properties:
            title:
              type: string
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      401:
        $ref: "#/components/responses/UnauthorizedError"
  put:
    tags:
      - Group
    summary: Endpoint to update group`s title
    security:
      - bearerAuth: []
    parameters:
      - in: body
        name: Group
        required: true
        description: The group`s title to update
        schema:
          properties:
            title:
              type: string
    responses:
      200:
        description: Successfully updated
      401:
        $ref: "#/components/responses/UnauthorizedError"
      404:
        description: Group with this id was not found
  delete:
    tags:
      - Group
    summary: Endpoint to delete group by id
    security:
      - bearerAuth: []
    parameters:
      - in: body
        name: Group
        required: true
        description: The group`s id to delete
        schema:
          properties:
            _id:
              type: string
    responses:
      204:
        description: No Content
      401:
        $ref: "#/components/responses/UnauthorizedError"
      404:
        description: Invalid group id
